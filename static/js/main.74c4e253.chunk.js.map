{"version":3,"sources":["Editor.js","SidePanel.js","index.js"],"names":["modes","t","c","p","j","e","h","g","Editor","props","copyToClipboard","navigator","clipboard","writeText","window","location","state","url","value","language","font","generate","bind","onLanguageChange","onChange","changeValue","href","search","data","replace","console","log","hostname","this","substring","l","setState","LZString","decompressFromEncodedURIComponent","newValue","target","cl","compressToEncodedURIComponent","className","class","onFontChange","type","onClick","mode","theme","wrapEnabled","name","width","fontSize","editorProps","$blockScrolling","React","Component","SidePanel","showQR","handleQR","size","aria-label","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.74c4e253.chunk.js","sourcesContent":["import React from \"react\";\nimport AceEditor from \"react-ace\";\nimport LZString from \"lz-string\";\nimport \"brace/mode/c_cpp\";\nimport \"brace/mode/python\";\nimport \"brace/mode/javascript\";\nimport \"brace/mode/html\";\nimport \"brace/mode/java\";\nimport \"brace/mode/golang\";\nimport \"brace/mode/text\";\nimport \"brace/theme/monokai\";\nimport \"./styles.css\";\nconst modes = {\n  t: \"text\",\n  c: \"c_cpp\",\n  p: \"python\",\n  j: \"java\",\n  e: \"javascript\",\n  h: \"html\",\n  g: \"golang\"\n};\nexport class Editor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { url: \"\", value: \"\", language: \"text\", font: 14 };\n    this.generate = this.generate.bind(this);\n    this.onLanguageChange = this.onLanguageChange.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.changeValue = this.changeValue.bind(this);\n  }\n\n  componentDidMount() {\n    var location = window.location.href;\n    if (location.search(\"#\") !== -1) {\n      var data = location.replace(\"https://ristri.github.io/privac/#\", \"\");\n      console.log(window.location.hostname)\n      this.changeValue(data.substring(2), data.substring(0, 1));\n    }\n  }\n  changeValue(e, l) {\n    this.setState({\n      value: LZString.decompressFromEncodedURIComponent(e),\n      language: modes[l]\n    });\n  }\n\n  onChange(newValue) {\n    this.setState({ value: newValue });\n    this.generate();\n  }\n  onLanguageChange(e) {\n    this.setState({ language: e.target.value });\n  }\n  onFontChange(e) {\n    this.setState({font: e.target.value})\n  }\n  generate() {\n    var cl;\n    if (this.state.language !== \"javascript\")\n      cl = this.state.language.substring(0, 1);\n    else cl = \"e\";\n    this.setState({\n      url: LZString.compressToEncodedURIComponent(this.state.value)\n    });\n    window.location.href =\n      \"https://ristri.github.io/privac/#\" + cl + \"/\" + this.state.url;\n  }\n  copyToClipboard = ()=>{\n    navigator.clipboard.writeText(window.location)\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"box\">\n          <div className=\"columns\">\n            <div className=\"column\">\n              <span>Select Language:</span>\n              <div class=\"select is-rounded\">\n                <select onChange={this.onLanguageChange} value={this.state.language}>\n                  <option>text</option>\n                  <option>c_cpp</option>\n                  <option>python</option>\n                  <option>java</option>\n                  <option>javascript</option>\n                  <option>html</option>\n                  <option>golang</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"column\">\n              <span>Font Size:</span>\n              <input className=\"input is-rounded\" onChange={this.onFontChange} value={this.state.font} type=\"number\" />\n            </div>\n            <div className=\"column\">\n              <button onClick={this.copyToClipboard} class=\"button is-dark\">Copy URL to Clipboard</button>\n            </div>\n            <div className=\"column\"></div>\n          </div>\n          <AceEditor\n            mode={this.state.language}\n            theme=\"monokai\"\n            wrapEnabled={true}\n            value={this.state.value}\n            onChange={this.onChange}\n            name=\"editor\"\n            width=\"auto\"\n            fontSize={this.state.font}\n            editorProps={{ $blockScrolling: true }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"bulma/css/bulma.css\";\nimport QRCode from 'qrcode.react';\n\nexport class SidePanel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { showQR: false }\n        this.handleQR = this.handleQR.bind(this);\n    }\n    handleQR() {\n        this.setState({ showQR: !(this.state.showQR) })\n    }\n    render() {\n        return (\n            <div>\n                <button class=\"button \" onClick={this.handleQR}>Generate QR </button>\n                <div className={this.state.showQR ? \"modal is-active\" : \"modal\" }>\n                    <div className=\"modal-background\"></div>\n                    <div className=\"modal-content\">\n                    <QRCode value={window.location.href} size={256} />\n                    </div>\n                    <button onClick={this.handleQR} className=\"modal-close is-large\" aria-label=\"close\"></button>\n                </div>\n            </div>\n        );\n    }\n} ","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bulma/css/bulma.css\";\nimport { Editor } from \"./Editor\";\nimport \"./styles.css\";\nimport {SidePanel} from \"./SidePanel\"\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <section className=\"hero is-dark\">\n          <div className=\"hero-body\">\n            <div className=\"container\">\n              <h1 className=\"title\">Privac</h1>\n              <h2 className=\"subtitle\">Code Sharing</h2>\n            </div>\n          </div>\n        </section>\n        <section>\n          <div className=\"container\">\n            <div className=\"columns\">\n              <div className=\"column is-two-thirds\">\n                <Editor />\n              </div>\n              <div className=\"column\">\n              <SidePanel />\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}